# Multi-stage build for frontend only
FROM node:18-alpine AS frontend-builder

WORKDIR /app/client

# Copy package files
COPY client/package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY client/ ./

# Set environment
ENV NODE_ENV=production

# Build the application
RUN echo "Building frontend..." && npm run build && echo "Frontend build completed successfully"

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001

# Copy built frontend
COPY --from=frontend-builder --chown=nextjs:nodejs /app/client/.next ./client/.next
COPY --from=frontend-builder --chown=nextjs:nodejs /app/client/public ./client/public
COPY --from=frontend-builder --chown=nextjs:nodejs /app/client/package*.json ./client/
COPY --from=frontend-builder --chown=nextjs:nodejs /app/client/next.config.js ./client/

# Install only production dependencies
WORKDIR /app/client
RUN npm ci --only=production

WORKDIR /app

# Set environment
ENV NODE_ENV=production
ENV PORT=3001
ENV NEXT_PUBLIC_API_URL=http://backend:3000/api/v1

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start application
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]
