version: '3.8'

services:
  # Backend (Development)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ecommerce-backend-dev
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run start:dev
    restart: unless-stopped
    networks:
      - ecommerce-dev-network

  # Frontend (Development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: ecommerce-frontend-dev
    ports:
      - "${FRONTEND_PORT:-3001}:3001"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000/api/v1}
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    restart: unless-stopped
    networks:
      - ecommerce-dev-network

networks:
  ecommerce-dev-network:
    driver: bridge
